/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package bcwellnesdesktop.View;
import bcwellnesdesktop.Controller.FeedbackController;
import bcwellnesdesktop.DBConnection;
import javax.swing.*;
import java.awt.*;
/**
 *
 * @author marku
 */
public class FeedbackInput extends javax.swing.JFrame {
    public JTextField txtFullName;
    public JComboBox<Integer> cmbRating;
    public JTextArea txtComments;
    public JButton btnSave;
    private FeedbackPanel parent;
    /**
     * Creates new form FeedbackInput
     */
    DBConnection db = new DBConnection();
    public FeedbackInput(FeedbackPanel parent) {
        this.parent = parent;
        FeedbackController fc = new FeedbackController();
        setTitle("Feedback Form");
        setSize(450, 350);
        setLocationRelativeTo(null);
        setLayout(new GridBagLayout());
        getContentPane().setBackground(new Color(60, 63, 65));
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

        Font font = new Font("Segoe UI", Font.PLAIN, 14);
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(10, 20, 10, 20);

        JLabel lblFullName = createLabel("Full Name:", font);
        txtFullName = createTextField(font);

        JLabel lblRating = createLabel("Rating (1-5):", font);
        cmbRating = new JComboBox<>(new Integer[]{1, 2, 3, 4, 5});
        styleCombo(cmbRating, font);

        JLabel lblComments = createLabel("Comments:", font);
        txtComments = new JTextArea(4, 25);
        txtComments.setFont(font);
        txtComments.setLineWrap(true);
        txtComments.setWrapStyleWord(true);
        JScrollPane scroll = new JScrollPane(txtComments);

        btnSave = createStyledButton("Submit");
        btnSave.addActionListener(e -> {
           String sname = txtFullName.getText();
           int ir = Integer.parseInt(cmbRating.getSelectedItem().toString());
           String c = txtComments.getText();
           fc.fadd(sname, ir, c);
            int result = JOptionPane.showConfirmDialog(this, // pops up if successful
                "Feedback saved successfully!\nClick OK to close.",
                "Success",
                JOptionPane.DEFAULT_OPTION,
                JOptionPane.INFORMATION_MESSAGE);
            if (result == JOptionPane.OK_OPTION) {
                if(parent != null){
                    try {
                        db.reloadf(parent.tblf);
                    } catch (ClassNotFoundException ex) {
                        System.getLogger(AppointmentInput.class.getName()).log(System.Logger.Level.ERROR, (String) null, ex);
                    }
                }
                this.dispose(); // close pop-up, this is refering to the input
            }  
        });
        gbc.gridy = 0;
        addRow(lblFullName, txtFullName, gbc);
        addRow(lblRating, cmbRating, gbc);

        gbc.gridx = 0;
        gbc.gridy++;
        gbc.gridwidth = 2;
        add(lblComments, gbc);
        gbc.gridy++;
        add(scroll, gbc);
        gbc.gridy++;
        add(btnSave, gbc);
    }
    private JLabel createLabel(String text, Font font) {
        JLabel lbl = new JLabel(text);
        lbl.setForeground(Color.WHITE);
        lbl.setFont(font);
        return lbl;
    }

    private JTextField createTextField(Font font) {
        JTextField tf = new JTextField(25);
        tf.setFont(font);
        return tf;
    }

    private void styleCombo(JComboBox<?> combo, Font font) {
        combo.setFont(font);
        combo.setBackground(new Color(100, 100, 100));
        combo.setForeground(Color.WHITE);
    }

    private JButton createStyledButton(String text) {
        JButton button = new JButton(text);
        button.setBackground(new Color(100, 100, 100));
        button.setForeground(Color.WHITE);
        button.setFocusPainted(false);
        button.setFont(new Font("Segoe UI", Font.PLAIN, 14));
        button.setBorder(BorderFactory.createEmptyBorder(8, 16, 8, 16));
        return button;
    }

    private void addRow(Component label, Component field, GridBagConstraints gbc) {
        gbc.gridx = 0;
        add(label, gbc);
        gbc.gridx = 1;
        add(field, gbc);
        gbc.gridy++;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
