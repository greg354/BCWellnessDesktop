/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package bcwellnesdesktop.View;
import bcwellnesdesktop.Controller.ApointmentController;
import bcwellnesdesktop.DBConnection;
import javax.swing.*;
import java.awt.*;
/**
 *
 * @author marku
 */
public class AppointmentEdit extends javax.swing.JFrame {
    public JTextField txtStudentNum;
    public JTextField txtCounselor;
    public JTextField txtDate;
    public JTextField txtTime;
    public JComboBox<String> cmbStatus;
    public JButton btnSave;
    private int appointmentID = -1;
    private AppointmentPanel parent;
    /**
     * Creates new form AppointmentEdit
     */
    DBConnection db = new DBConnection();
    public AppointmentEdit() {
       ApointmentController ac = new ApointmentController();
        
        setTitle("Appointment Form");
        setSize(400, 400);
        setLocationRelativeTo(null);
        setLayout(new GridBagLayout());
        getContentPane().setBackground(new Color(60, 63, 65));
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

        GridBagConstraints gbc = new GridBagConstraints();
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(10, 20, 10, 20);

        Font font = new Font("Segoe UI", Font.PLAIN, 14);

        JLabel lblStudent = createLabel("Student Name:", font);
        txtStudentNum = createTextField(font);

        JLabel lblCounselor = createLabel("Counselor Name:", font);
        txtCounselor = createTextField(font);

        JLabel lblDate = createLabel("Date (YYYY-MM-DD):", font);
        txtDate = createTextField(font);

        JLabel lblTime = createLabel("Time (e.g. 10:00 AM):", font);
        txtTime = createTextField(font);

        JLabel lblStatus = createLabel("Status:", font);
        cmbStatus = new JComboBox<>(new String[]{"Pending", "Confirmed", "Cancelled"});
        styleCombo(cmbStatus, font);

        btnSave = createStyledButton("Save");
        btnSave.addActionListener(e -> {
           int id = Integer.parseInt(getTitle().split(": ")[1]);
           String studentName = txtStudentNum.getText();
           String counselor = txtCounselor.getText();
           String sdate = txtDate.getText();
           String stime = txtTime.getText();
           String status = (String) cmbStatus.getSelectedItem();
           ac.updateAppointment(id, studentName, counselor, sdate, stime, status);
            int result = JOptionPane.showConfirmDialog(this, // pops up if successful
                "Appointment updated successfully!\nClick OK to close.",
                "Success",
                JOptionPane.DEFAULT_OPTION,
                JOptionPane.INFORMATION_MESSAGE);
            if (result == JOptionPane.OK_OPTION) {
                if(parent != null){
                    try {
                        db.reloadapp(parent.tblapp);
                    } catch (ClassNotFoundException ex) {
                        System.getLogger(AppointmentInput.class.getName()).log(System.Logger.Level.ERROR, (String) null, ex);
                    }
                }
                this.dispose(); // close pop-up, this is refering to the input
            }
          });

        gbc.gridy = 0;
        addRow(lblStudent, txtStudentNum, gbc);
        addRow(lblCounselor, txtCounselor, gbc);
        addRow(lblDate, txtDate, gbc);
        addRow(lblTime, txtTime, gbc);
        addRow(lblStatus, cmbStatus, gbc);

        gbc.gridy++;
        gbc.gridwidth = 2;
        add(btnSave, gbc);      
    }
       private JLabel createLabel(String text, Font font) {
        JLabel lbl = new JLabel(text);
        lbl.setForeground(Color.WHITE);
        lbl.setFont(font);
        return lbl;
    }

    private JTextField createTextField(Font font) {
        JTextField tf = new JTextField();
        tf.setFont(font);
        return tf;
    }

    private void styleCombo(JComboBox<?> combo, Font font) {
        combo.setFont(font);
        combo.setBackground(new Color(100, 100, 100));
        combo.setForeground(Color.WHITE);
    }

    private JButton createStyledButton(String text) {
        JButton button = new JButton(text);
        button.setBackground(new Color(100, 100, 100));
        button.setForeground(Color.WHITE);
        button.setFocusPainted(false);
        button.setFont(new Font("Segoe UI", Font.PLAIN, 14));
        button.setBorder(BorderFactory.createEmptyBorder(8, 16, 8, 16));
        return button;
    }

    private void addRow(Component label, Component field, GridBagConstraints gbc) {
        gbc.gridx = 0;
        add(label, gbc);
        gbc.gridx = 1;
        add(field, gbc);
        gbc.gridy++;
    }          

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
